{"ast":null,"code":"import _classCallCheck from \"/Users/krestko/Desktop/Desktop/babynames/baby_names/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/krestko/Desktop/Desktop/babynames/baby_names/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/krestko/Desktop/Desktop/babynames/baby_names/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/krestko/Desktop/Desktop/babynames/baby_names/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/krestko/Desktop/Desktop/babynames/baby_names/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/krestko/Desktop/Desktop/babynames/baby_names/src/pages/ListPage.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport NamesAPI from '../api/NamesAPI';\nimport ListsAPI from '../api/ListsAPI';\nimport UsersAPI from '../api/UsersAPI';\nimport '../App.css';\n\nvar ListPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListPage, _Component);\n\n  function ListPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ListPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ListPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      list: null,\n      names: null,\n      baby_name: '',\n      redirect: null\n    };\n\n    _this.displayNames = function () {\n      var name = _this.state.names.map(function (name, index) {\n        return React.createElement(\"p\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, name.baby_name);\n      });\n\n      return name;\n    };\n\n    _this.checkBabyName = function () {\n      var counter = 0;\n\n      while (counter < _this.state.names.length) {\n        if (_this.state.names[counter].baby_name === _this.state.baby_name) {\n          _this.setState({\n            baby_name: '',\n            redirect: false\n          });\n\n          break;\n        } else if (counter === _this.state.names.length - 1) {\n          console.log(_this.state.baby_name);\n          NamesAPI.addListName(_this.props.match.params.listID, {\n            baby_name: _this.state.baby_name\n          }).then(function () {\n            return NamesAPI.fetchNamesByListID(_this.props.match.params.listID);\n          }).then(function (json) {\n            _this.setState({\n              names: json,\n              baby_name: '',\n              redirect: true\n            });\n          });\n        }\n\n        counter++;\n      }\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.checkBabyName();\n    };\n\n    _this.handleBabyName = function (e) {\n      console.log(_this.state.baby_name);\n\n      _this.setState({\n        baby_name: e.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ListPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      UsersAPI.updateUserData(this.props.match.params.userID, {\n        recently_viewed_list: this.props.match.params.listID\n      });\n      ListsAPI.fetchListByID(this.props.match.params.listID).then(function (json) {\n        return _this2.setState({\n          list: json\n        });\n      });\n      NamesAPI.fetchNamesByListID(this.props.match.params.listID).then(function (json) {\n        return _this2.setState({\n          names: json\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    // deleteThis = (componentID) => \n    //   Components.deleteComponent(componentID)\n    //   .then(() => Components.fetchComponents())\n    //   .then(json => {\n    //     this.setState({\n    //     components: json\n    //   })\n    // });\n    value: function render() {\n      console.log(this.state.names);\n\n      if (this.state.redirect) {\n        return this.state.names.map(function (name, index) {\n          return React.createElement(\"div\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }, name.baby_name, React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }));\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.state.list ? React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, this.state.list.list_name) : null, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Add Baby Name:\"), React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.baby_name,\n        onChange: this.handleBabyName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return ListPage;\n}(Component);\n\nexport default ListPage;","map":{"version":3,"sources":["/Users/krestko/Desktop/Desktop/babynames/baby_names/src/pages/ListPage.js"],"names":["React","Component","Redirect","NamesAPI","ListsAPI","UsersAPI","ListPage","state","list","names","baby_name","redirect","displayNames","name","map","index","checkBabyName","counter","length","setState","console","log","addListName","props","match","params","listID","then","fetchNamesByListID","json","handleSubmit","e","preventDefault","handleBabyName","target","value","updateUserData","userID","recently_viewed_list","fetchListByID","list_name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport NamesAPI from '../api/NamesAPI';\nimport ListsAPI from '../api/ListsAPI';\nimport UsersAPI from '../api/UsersAPI';\nimport '../App.css';\n\nclass ListPage extends Component {\n  state = {\n    list: null,\n    names: null,\n    baby_name: '',\n    redirect: null\n  }\n\n  componentDidMount() {\n    UsersAPI.updateUserData(this.props.match.params.userID, {recently_viewed_list: this.props.match.params.listID})\n    ListsAPI.fetchListByID(this.props.match.params.listID)\n    .then(json => this.setState({\n      list: json\n    }))\n    NamesAPI.fetchNamesByListID(this.props.match.params.listID)\n    .then(json => this.setState({\n      names: json\n    }))\n  }\n\n  displayNames = () => {\n    let name = this.state.names.map((name, index) => {\n      return <p key={index}>{name.baby_name}</p>\n    })\n    return name;\n  }\n\n  checkBabyName = () => {\n    let counter = 0;\n    while(counter < this.state.names.length) {\n      if(this.state.names[counter].baby_name === this.state.baby_name) {\n        this.setState({ \n          baby_name: '',\n          redirect: false\n        })\n        break;\n      } else if(counter === this.state.names.length - 1) {\n        console.log(this.state.baby_name)\n        NamesAPI.addListName(this.props.match.params.listID, {baby_name: this.state.baby_name})\n        .then(() => NamesAPI.fetchNamesByListID(this.props.match.params.listID))\n        .then(json => {\n          this.setState({\n            names: json,\n            baby_name: '',\n            redirect: true\n        })})\n      } \n      counter++;\n    }\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.checkBabyName();\n  }\n\n  handleBabyName = (e) => {\n    console.log(this.state.baby_name)\n    this.setState({baby_name: e.target.value});\n  }\n\n    // deleteThis = (componentID) => \n    //   Components.deleteComponent(componentID)\n    //   .then(() => Components.fetchComponents())\n    //   .then(json => {\n    //     this.setState({\n    //     components: json\n    //   })\n    // });\n    \n  render() {\n    console.log(this.state.names)\n    if(this.state.redirect) {\n      return this.state.names.map((name, index) => {\n        return (\n          <div key={index}>\n            {name.baby_name}<br/>\n          </div>\n        )}\n      )\n    }\n\n    return (\n      <div>\n        { this.state.list ? <h2>{this.state.list.list_name}</h2>: null }\n        <form>\n          <h6>Add Baby Name:</h6>\n          <input type='text' value={this.state.baby_name} onChange={this.handleBabyName} /><br />\n          <button type=\"button\" onClick={this.handleSubmit}>Submit</button>\n        </form>\n        {/* {this.state.names ? this.displayNames(): null} */}\n      </div>\n    )\n  }\n}\n\nexport default ListPage;"]},"metadata":{},"sourceType":"module"}