{"ast":null,"code":"import _classCallCheck from \"/Users/krestko/Desktop/git_repos/babyNamesFrontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/krestko/Desktop/git_repos/babyNamesFrontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/krestko/Desktop/git_repos/babyNamesFrontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/krestko/Desktop/git_repos/babyNamesFrontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/krestko/Desktop/git_repos/babyNamesFrontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/krestko/Desktop/git_repos/babyNamesFrontend/src/components/NameForm/NameForm.js\";\nimport React, { Component } from 'react';\nimport AlphabeticDisplay from '../AlphabeticDisplay/AlphabeticDisplay';\nimport LengthDisplay from '../LengthDisplay/LengthDisplay';\nimport NamesAPI from '../../api/NamesAPI';\nimport '../../App.css';\nimport '../../pages/ListNamesPage.css';\n\nvar NameForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NameForm, _Component);\n\n  function NameForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NameForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NameForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      names: null,\n      baby_name: '',\n      redirect: null,\n      name_params: null,\n      toggle_sort: null\n    };\n\n    _this.handleNameSave = function () {\n      NamesAPI.addListName(_this.props.list.id, {\n        baby_name: _this.state.baby_name,\n        crossed_out: 'false'\n      }).then(function () {\n        return NamesAPI.fetchNamesByListID(_this.props.list.id);\n      }).then(function (json) {\n        _this.setState({\n          names: json,\n          baby_name: '',\n          redirect: null,\n          name_params: null\n        });\n      });\n    };\n\n    _this.checkBabyName = function () {\n      if (_this.state.names.length === 0) {\n        _this.handleNameSave();\n      } else {\n        var counter = 0;\n\n        while (counter < _this.state.names.length) {\n          if (_this.state.names[counter].baby_name.toUpperCase() === _this.state.baby_name.toUpperCase()) {\n            _this.setState({\n              baby_name: '',\n              redirect: true\n            });\n\n            break;\n          } else if (counter === _this.state.names.length - 1) {\n            _this.handleNameSave();\n          }\n\n          counter++;\n        }\n      }\n    };\n\n    _this.handleBabyName = function (e) {\n      _this.setState({\n        baby_name: e.target.value\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      if (/[0-9]+/gi.test(_this.state.baby_name) === true) {\n        return _this.setState({\n          baby_name: '',\n          name_params: false\n        });\n      }\n\n      _this.checkBabyName();\n    };\n\n    _this.handleCrossOut = function (nameID) {\n      NamesAPI.updateName(_this.props.list.id, nameID, {\n        crossed_out: 'true'\n      }).then(function () {\n        return NamesAPI.fetchNamesByListID(_this.props.list.id);\n      }).then(function (json) {\n        return _this.setState({\n          names: json\n        });\n      });\n    };\n\n    _this.handleUncross = function (nameID) {\n      NamesAPI.updateName(_this.props.list.id, nameID, {\n        crossed_out: 'false'\n      }).then(function () {\n        return NamesAPI.fetchNamesByListID(_this.props.list.id);\n      }).then(function (json) {\n        return _this.setState({\n          names: json\n        });\n      });\n    };\n\n    _this.displayNames = function () {\n      return _this.state.names.map(function (name, index) {\n        if (name.crossed_out === 'false') {\n          return React.createElement(\"div\", {\n            key: index,\n            onClick: function onClick() {\n              return _this.handleCrossOut(name.id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            className: \"baby-name\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, name.baby_name.toUpperCase()));\n        } else {\n          return React.createElement(\"div\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            className: \"baby-name\",\n            onClick: function onClick() {\n              return _this.handleUncross(name.id);\n            },\n            style: {\n              textDecoration: 'line-through'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }, name.baby_name.toUpperCase()));\n        }\n      });\n    };\n\n    _this.sortNamesAlphabetical = function () {\n      _this.setState({\n        toggle_sort: true\n      });\n    };\n\n    _this.sortNamesLength = function () {\n      _this.setState({\n        toggle_sort: false\n      });\n    };\n\n    _this.saveSortedNames = function (x) {\n      _this.setState({\n        names: x,\n        toggle_sort: null\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NameForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      return NamesAPI.fetchNamesByListID(this.props.list.id).then(function (json) {\n        return _this2.setState({\n          names: json\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Add Baby Name:\"), React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.baby_name,\n        onChange: this.handleBabyName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(\"a\", {\n        type: \"button\",\n        onClick: this.sortNamesAlphabetical,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"|Alphabetical|\"), React.createElement(\"a\", {\n        type: \"button\",\n        onClick: this.sortNamesLength,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"|Length|\"), this.state.name_params === false ? React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Please do not include numbers in your names.\") : null, this.state.redirect === true ? React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Name already included in list.\") : null), React.createElement(\"div\", {\n        className: \"baby-names\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, this.state.toggle_sort === true ? React.createElement(AlphabeticDisplay, {\n        names: this.state.names,\n        list: this.props.list,\n        saveSortedNames: this.saveSortedNames,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }) : this.state.toggle_sort === false ? React.createElement(LengthDisplay, {\n        names: this.state.names,\n        list: this.props.list,\n        saveSortedNames: this.saveSortedNames,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }) : this.state.names && this.state.toggle_sort === null ? this.displayNames() : null));\n    }\n  }]);\n\n  return NameForm;\n}(Component);\n\nexport default NameForm;","map":{"version":3,"sources":["/Users/krestko/Desktop/git_repos/babyNamesFrontend/src/components/NameForm/NameForm.js"],"names":["React","Component","AlphabeticDisplay","LengthDisplay","NamesAPI","NameForm","state","names","baby_name","redirect","name_params","toggle_sort","handleNameSave","addListName","props","list","id","crossed_out","then","fetchNamesByListID","json","setState","checkBabyName","length","counter","toUpperCase","handleBabyName","e","target","value","handleSubmit","preventDefault","test","handleCrossOut","nameID","updateName","handleUncross","displayNames","map","name","index","textDecoration","sortNamesAlphabetical","sortNamesLength","saveSortedNames","x"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport AlphabeticDisplay from '../AlphabeticDisplay/AlphabeticDisplay';\nimport LengthDisplay from '../LengthDisplay/LengthDisplay';\nimport NamesAPI from '../../api/NamesAPI';\nimport '../../App.css';\nimport '../../pages/ListNamesPage.css'\n\nclass NameForm extends Component {\n  state = {\n    names: null,\n    baby_name: '',\n    redirect: null,\n    name_params: null,\n    toggle_sort: null\n  }\n\n  componentDidMount() {\n    return NamesAPI.fetchNamesByListID(this.props.list.id)\n      .then(json => this.setState({ names: json }))\n  }\n\n  handleNameSave = () => {\n    NamesAPI.addListName(this.props.list.id, {baby_name: this.state.baby_name, crossed_out: 'false'})\n    .then(() => NamesAPI.fetchNamesByListID(this.props.list.id))\n    .then(json => {\n      this.setState({\n        names: json,\n        baby_name: '',\n        redirect: null,\n        name_params: null,\n    })})\n  }\n\n  checkBabyName = () => {\n    if(this.state.names.length === 0) {\n      this.handleNameSave();\n    } else {\n      let counter = 0;\n      while(counter < this.state.names.length) {\n        if(this.state.names[counter].baby_name.toUpperCase() === this.state.baby_name.toUpperCase()) {\n          this.setState({\n            baby_name: '',\n            redirect: true\n          })\n          break;\n        } else if(counter === this.state.names.length - 1) {\n          this.handleNameSave();\n        } \n        counter++;\n      }\n    }\n  }\n\n  handleBabyName = (e) => {\n    this.setState({baby_name: e.target.value});\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if(/[0-9]+/gi.test(this.state.baby_name) === true) {\n      return this.setState({\n        baby_name: '',\n        name_params: false\n      });\n    }\n    this.checkBabyName();\n  }\n\n  handleCrossOut = (nameID) => {\n    NamesAPI.updateName(this.props.list.id, nameID, {crossed_out: 'true'})\n    .then(() => NamesAPI.fetchNamesByListID(this.props.list.id))\n    .then(json => this.setState({ names: json }))\n  }\n\n  handleUncross = (nameID) => {\n    NamesAPI.updateName(this.props.list.id, nameID, {crossed_out: 'false'})\n    .then(() => NamesAPI.fetchNamesByListID(this.props.list.id))\n    .then(json => this.setState({ names: json }))\n  }\n\n  displayNames = () => {\n    return this.state.names.map((name, index) => {\n      if(name.crossed_out === 'false') {\n        return (\n          <div key={index} onClick={() => this.handleCrossOut(name.id)}>\n            <a className='baby-name'>\n              {name.baby_name.toUpperCase()}        \n            </a>\n          </div>\n        )\n      } else {\n        return (\n          <div key={index}>\n            <a className='baby-name' onClick={() => this.handleUncross(name.id)} style={{textDecoration: 'line-through'}}>\n              {name.baby_name.toUpperCase()}        \n            </a>\n          </div>\n        )\n      }\n    })\n  }\n\n  sortNamesAlphabetical = () => {\n    this.setState({ toggle_sort: true })\n  }\n\n  sortNamesLength = () => {\n    this.setState({ toggle_sort: false })\n  }\n\n  saveSortedNames = (x) => {\n    this.setState({ \n      names: x,\n      toggle_sort: null\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <h5>Add Baby Name:</h5>\n          <input type='text' value={this.state.baby_name} onChange={this.handleBabyName} />\n          <button type='submit'>Submit</button><br/>\n          <a type='button' onClick={this.sortNamesAlphabetical}>|Alphabetical|</a>\n          <a type='button' onClick={this.sortNamesLength}>|Length|</a>\n          { this.state.name_params === false ? <h6>Please do not include numbers in your names.</h6>: null }\n          { this.state.redirect === true ? <h6>Name already included in list.</h6>: null }\n        </form>\n\n        <div className='baby-names'>\n          { this.state.toggle_sort === true ? <AlphabeticDisplay names={this.state.names} list={this.props.list} saveSortedNames={this.saveSortedNames} />: this.state.toggle_sort === false ? <LengthDisplay names={this.state.names} list={this.props.list} saveSortedNames={this.saveSortedNames} />: this.state.names && this.state.toggle_sort === null ? this.displayNames(): null}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default NameForm;"]},"metadata":{},"sourceType":"module"}