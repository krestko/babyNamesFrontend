{"ast":null,"code":"var fetchNamesByListID = function fetchNamesByListID(listID) {\n  return fetch(\"http://localhost:3000/api/v1/lists/\".concat(listID, \"/names\")).then(function (response) {\n    return response.json();\n  }).catch(function (error) {\n    return console.log(error);\n  });\n};\n\nvar addListName = function addListName(listID, nameObject) {\n  return fetch(\"http://localhost:3000/api/v1/lists/\".concat(listID, \"/names\"), {\n    headers: {\n      'content-type': 'application/json'\n    },\n    method: \"POST\",\n    mode: \"cors\",\n    body: JSON.stringify(nameObject)\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (error) {\n    return console.log(error);\n  });\n};\n\nexport default {\n  fetchNamesByListID: fetchNamesByListID,\n  addListName: addListName\n};","map":{"version":3,"sources":["/Users/krestko/Desktop/git_repos/babyNamesFrontend/src/api/NamesAPI.js"],"names":["fetchNamesByListID","listID","fetch","then","response","json","catch","error","console","log","addListName","nameObject","headers","method","mode","body","JSON","stringify"],"mappings":"AAAA,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,MAAD,EAAY;AACrC,SAAOC,KAAK,8CAAuCD,MAAvC,YAAL,CACJE,IADI,CACC,UAACC,QAAD;AAAA,WAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,GADD,EAEJC,KAFI,CAEE,UAAAC,KAAK;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,GAFP,CAAP;AAGD,CAJD;;AAMA,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACT,MAAD,EAASU,UAAT,EAAwB;AAC1C,SAAOT,KAAK,8CAAuCD,MAAvC,aAAuD;AACjEW,IAAAA,OAAO,EAAE;AAAC,sBAAgB;AAAjB,KADwD;AAEjEC,IAAAA,MAAM,EAAE,MAFyD;AAGjEC,IAAAA,IAAI,EAAE,MAH2D;AAIjEC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,UAAf;AAJ2D,GAAvD,CAAL,CAMNR,IANM,CAMD,UAACC,QAAD;AAAA,WAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,GANC,EAONC,KAPM,CAOA,UAAAC,KAAK;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,GAPL,CAAP;AAQD,CATD;;AAWA,eAAe;AACbP,EAAAA,kBAAkB,EAAEA,kBADP;AAEbU,EAAAA,WAAW,EAAEA;AAFA,CAAf","sourcesContent":["const fetchNamesByListID = (listID) => {\n  return fetch(`http://localhost:3000/api/v1/lists/${listID}/names`) \n    .then((response) => response.json())\n    .catch(error => console.log(error))\n}\n\nconst addListName = (listID, nameObject) => {\n  return fetch(`http://localhost:3000/api/v1/lists/${listID}/names`, {\n    headers: {'content-type': 'application/json'},\n    method: \"POST\",\n    mode: \"cors\",\n    body: JSON.stringify(nameObject)\n  })\n  .then((response) => response.json())\n  .catch(error => console.log(error))\n}\n\nexport default {\n  fetchNamesByListID: fetchNamesByListID,\n  addListName: addListName\n}"]},"metadata":{},"sourceType":"module"}