{"ast":null,"code":"import _classCallCheck from \"/Users/krestko/Desktop/git_repos/babyNamesFrontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/krestko/Desktop/git_repos/babyNamesFrontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/krestko/Desktop/git_repos/babyNamesFrontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/krestko/Desktop/git_repos/babyNamesFrontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/krestko/Desktop/git_repos/babyNamesFrontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/krestko/Desktop/git_repos/babyNamesFrontend/src/pages/ListPage.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom'; // import NamesAPI from '../api/NamesAPI';\n// import ListsAPI from '../api/ListsAPI';\n\nimport '../App.css';\nimport './ListNamesPage.css';\n\nvar ListPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListPage, _Component);\n\n  function ListPage() {\n    _classCallCheck(this, ListPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ListPage).apply(this, arguments));\n  }\n\n  _createClass(ListPage, [{\n    key: \"render\",\n    // state = {\n    //   list: null,\n    //   names: null,\n    //   baby_name: '',\n    //   redirect: null,\n    //   name_params: null\n    // }\n    // componentDidMount() {\n    //   UsersAPI.updateUserData(this.props.match.params.userID, {recently_viewed_list: this.props.match.params.listID})\n    //   ListsAPI.fetchListByID(this.props.match.params.listID)\n    //   .then(json => this.setState({\n    //     list: json\n    //   }))\n    //   NamesAPI.fetchNamesByListID(this.props.match.params.listID)\n    //   .then(json => this.setState({\n    //     names: json\n    //   }))\n    // }\n    // displayNames = () => {\n    //   let sortedNames = [];\n    //   this.state.names.map(name => {\n    //     name.baby_name = name.baby_name.toUpperCase();\n    //     sortedNames.push(name);\n    //   })\n    //   sortedNames.sort((a, b) => {\n    //     let A = a.baby_name;\n    //     let B = b.baby_name;\n    //     return (A < B) ? -1: (A > B) ? 1: 0;\n    //   });\n    //   return sortedNames.map((name, index) => {\n    //     return (\n    //       <div key={index} className='baby-name'>\n    //         {name.baby_name.toLowerCase()}<br/>\n    //       </div>\n    //     )\n    //   })\n    // }\n    // handleNameSave = () => {\n    //   NamesAPI.addListName(this.state.list.id, {baby_name: this.state.baby_name})\n    //   .then(() => NamesAPI.fetchNamesByListID(this.state.list.id))\n    //   .then(json => {\n    //     this.setState({\n    //       names: json,\n    //       baby_name: '',\n    //       redirect: true\n    //   })})\n    // }\n    // checkBabyName = () => {\n    //   if(this.state.names.length === 0) {\n    //     this.handleNameSave();\n    //   }\n    //   let counter = 0;\n    //   while(counter < this.state.names.length) {\n    //     if(this.state.names[counter].baby_name === this.state.baby_name) {\n    //       this.setState({ \n    //         baby_name: '',\n    //         redirect: false\n    //       })\n    //       break;\n    //     } else if(counter === this.state.names.length - 1) {\n    //       this.handleNameSave();\n    //     } \n    //     counter++;\n    //   }\n    // }\n    // handleBabyName = (e) => {\n    //   this.setState({baby_name: e.target.value});\n    // }\n    // handleSubmit = (e) => {\n    //   e.preventDefault();\n    //   if(/^[0-9]+$/gi.test(`${this.state.baby_name}`) === true) {\n    //     return this.setState({\n    //       baby_name: '',\n    //       name_params: false\n    //     })\n    //   }\n    //   this.checkBabyName();\n    // }\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Hello!\");\n    }\n  }]);\n\n  return ListPage;\n}(Component);\n\nexport default ListPage;","map":{"version":3,"sources":["/Users/krestko/Desktop/git_repos/babyNamesFrontend/src/pages/ListPage.js"],"names":["React","Component","Link","ListPage"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CACA;AACA;;AACA,OAAO,YAAP;AACA,OAAO,qBAAP;;IAEMC,Q;;;;;;;;;;;;;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;6BAES;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAkBD;;;;EAzGoBF,S;;AA4GvB,eAAeE,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n// import NamesAPI from '../api/NamesAPI';\n// import ListsAPI from '../api/ListsAPI';\nimport '../App.css';\nimport './ListNamesPage.css'\n\nclass ListPage extends Component {\n  // state = {\n  //   list: null,\n  //   names: null,\n  //   baby_name: '',\n  //   redirect: null,\n  //   name_params: null\n  // }\n\n  // componentDidMount() {\n  //   UsersAPI.updateUserData(this.props.match.params.userID, {recently_viewed_list: this.props.match.params.listID})\n  //   ListsAPI.fetchListByID(this.props.match.params.listID)\n  //   .then(json => this.setState({\n  //     list: json\n  //   }))\n  //   NamesAPI.fetchNamesByListID(this.props.match.params.listID)\n  //   .then(json => this.setState({\n  //     names: json\n  //   }))\n  // }\n\n  // displayNames = () => {\n  //   let sortedNames = [];\n  //   this.state.names.map(name => {\n  //     name.baby_name = name.baby_name.toUpperCase();\n  //     sortedNames.push(name);\n  //   })\n  //   sortedNames.sort((a, b) => {\n  //     let A = a.baby_name;\n  //     let B = b.baby_name;\n  //     return (A < B) ? -1: (A > B) ? 1: 0;\n  //   });\n  //   return sortedNames.map((name, index) => {\n  //     return (\n  //       <div key={index} className='baby-name'>\n  //         {name.baby_name.toLowerCase()}<br/>\n  //       </div>\n  //     )\n  //   })\n  // }\n\n  // handleNameSave = () => {\n  //   NamesAPI.addListName(this.state.list.id, {baby_name: this.state.baby_name})\n  //   .then(() => NamesAPI.fetchNamesByListID(this.state.list.id))\n  //   .then(json => {\n  //     this.setState({\n  //       names: json,\n  //       baby_name: '',\n  //       redirect: true\n  //   })})\n  // }\n\n  // checkBabyName = () => {\n  //   if(this.state.names.length === 0) {\n  //     this.handleNameSave();\n  //   }\n  //   let counter = 0;\n  //   while(counter < this.state.names.length) {\n  //     if(this.state.names[counter].baby_name === this.state.baby_name) {\n  //       this.setState({ \n  //         baby_name: '',\n  //         redirect: false\n  //       })\n  //       break;\n  //     } else if(counter === this.state.names.length - 1) {\n  //       this.handleNameSave();\n  //     } \n  //     counter++;\n  //   }\n  // }\n\n  // handleBabyName = (e) => {\n  //   this.setState({baby_name: e.target.value});\n  // }\n\n  // handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   if(/^[0-9]+$/gi.test(`${this.state.baby_name}`) === true) {\n  //     return this.setState({\n  //       baby_name: '',\n  //       name_params: false\n  //     })\n  //   }\n  //   this.checkBabyName();\n  // }\n    \n  render() {\n    return (\n      <div>\n        Hello!\n        {/* { this.state.list ? <h1>*{this.state.list.list_name}*</h1>: null }\n        <form>\n          <h5>Add Baby Name:</h5>\n          { this.state.name_params === false ? <h6>Please do not include numbers in your names.</h6>: null }\n          <input type='text' value={this.state.baby_name} onChange={this.handleBabyName} />\n          <button type=\"button\" onClick={this.handleSubmit}>Submit</button>\n        </form>\n        <div className='extra-navs'>\n          <Link to={`/babynames/${this.props.match.params.userID}`}>|Home|</Link>\n        </div>\n        <div className='baby-names'>\n          {this.state.redirect ? this.displayNames(): this.state.names ? this.displayNames(): null}\n        </div> */}\n      </div>\n    )\n  }\n}\n\nexport default ListPage;"]},"metadata":{},"sourceType":"module"}